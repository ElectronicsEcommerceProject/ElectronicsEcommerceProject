### Electronics E-Commerce Project - Full Database Documentation (Hinglish)

Ye documentation Electronics E-Commerce Project ke liye complete database design hai, jo 26 Sequelize models ke saath fully aligned hai. Har table ke fields, relationships, aur constraints detail mein diye gaye hain. Sab kuch Hinglish mein hai taaki naye developers ko samajh aaye.

---

### 1. User Management

#### 1.1 Users Table
**Description**: Customers, retailers, aur platform admins ka data store karta hai.  
**Fields**:  
- `user_id` (UUID, Primary Key): Unique ID  
- `name` (String, not null): User ka naam  
- `phone_number` (String, unique, not null): Mobile number  
- `profileImage_url` (String, nullable): Profile picture URL  
- `email` (String, unique, not null, validate: isEmail): Email address  
- `password` (String, not null): Hashed password (bcrypt)  
- `current_address_id` (UUID, nullable, FK → Addresses): Default address  
- `status` (Enum: active, inactive, banned, default: active): User status  
- `role` (Enum: retailer, customer, admin, not null): User role  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `email`: Unique, valid email format  
- `phone_number`: Unique, valid format (e.g., +91xxxxxxxxxx)  
- Indexes: `email`, `phone_number`, `role`, `status`  

**Relationships**:  
- `hasMany Addresses`: Ek user ke multiple addresses  
- `hasMany Orders`: Ek user ke multiple orders  
- `hasOne Cart`: Ek user ka ek active cart  
- `hasMany Wishlists`: Ek user ke multiple wishlists  
- `hasMany ProductReviews`: Ek user ke multiple reviews  
- `hasMany CouponRedemptions`: Ek user ke multiple coupon redemptions  
- `hasMany CouponUsers`: Ek user ke multiple assigned coupons  
- `hasMany Payments`: Ek user ke multiple payments  
- `hasMany Products` (via `created_by`): Admin/retailer products create kar sakta hai  
- `hasMany Categories` (via `created_by`/`updated_by`): Admin categories create/update kar sakta hai  
- `hasMany Brands` (via `created_by`/`updated_by`): Admin brands create/update kar sakta hai  
- `hasMany ProductVariants` (via `created_by`/`updated_by`): Admin/retailer variants create/update kar sakta hai  
- `hasMany ProductMedia` (via `created_by`/`updated_by`): Admin/retailer media create/update kar sakta hai  
- `hasMany ProductMediaURL` (via `created_by`/`updated_by`): Admin/retailer media URLs create/update kar sakta hai  
- `hasMany Attributes` (via `created_by`/`updated_by`): Admin attributes create/update kar sakta hai  
- `hasMany AttributeValues` (via `created_by`/`updated_by`): Admin attribute values create/update kar sakta hai  
- `hasMany VariantAttributeValues` (via `created_by`/`updated_by`): Admin variant attributes create/update kar sakta hai  
- `hasMany Coupons` (via `created_by`/`updated_by`): Admin coupons create/update kar sakta hai  
- `hasMany DiscountRules` (via `created_by`/`updated_by`): Admin discount rules create/update kar sakta hai  
- `hasMany StockAlerts` (via `created_by`/`updated_by`): Admin stock alerts create/update kar sakta hai  

#### 1.2 Owners Table
**Description**: Store owners ka data store karta hai (alag se rakha gaya hai for multi-vendor).  
**Fields**:  
- `owner_id` (UUID, Primary Key): Unique ID  
- `name` (String, not null): Owner ka naam  
- `phone_number` (String, unique, not null): Mobile number  
- `profileImage_url` (String, nullable): Profile picture URL  
- `email` (String, unique, not null, validate: isEmail): Email address  
- `default_address` (Text, nullable): Default address (string format)  
- `status` (Enum: active, inactive, banned, default: active): Owner status  
- `role` (Enum: admin, default: admin): Fixed role  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `email`, `phone_number`: Unique  
- Indexes: `email`, `phone_number`, `status`  

**Relationships**:  
- `hasMany Stores`: Ek owner ke multiple stores  
- `hasMany Products` (via `created_by`): Ek owner products create kar sakta hai  

#### 1.3 Addresses Table
**Description**: Users ke delivery addresses manage karta hai.  
**Fields**:  
- `address_id` (UUID, Primary Key): Unique ID  
- `user_id` (UUID, not null, FK → Users): Kon sa user  
- `address_line1` (String, not null): Address ka first line  
- `address_line2` (String, nullable): Address ka second line  
- `city` (String, not null): Sheher ka naam  
- `state` (String, not null): State ka naam  
- `postal_code` (String, not null): PIN code  
- `country` (String, not null, default: "India"): Country name  
- `is_default` (Boolean, default: false): Default address hai ya nahi  
- `is_active` (Boolean, default: true): Soft delete ke liye  
- `created_at`, `updated_at`, `deleted_at` (Timestamp): Auto-managed (paranoid enabled)  

**Constraints**:  
- Unique constraint: Only one `is_default` = true per `user_id`  
- Indexes: `user_id`, `is_default`, `is_active`  

**Relationships**:  
- `belongsTo Users`: Ek address ek user se belong karta hai  
- `hasMany Orders`: Ek address pe multiple orders ho sakte hain  

---

### 2. Product Catalog

#### 2.1 Categories Table
**Description**: Products ke categories (e.g., Mobiles, TVs).  
**Fields**:  
- `category_id` (UUID, Primary Key): Unique ID  
- `name` (String, not null): Category ka naam  
- `slug` (String, unique, not null): URL-friendly name  
- `parent_id` (UUID, nullable, FK → Categories): Parent category (for sub-categories)  
- `target_role` (Enum: customer, retailer, both, default: both): Kon use karega  
- `is_active` (Boolean, default: true): Soft delete ke liye  
- `created_by` (UUID, not null, FK → Users): Kon ne banaya  
- `updated_by` (UUID, nullable, FK → Users): Kon ne update kiya  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `slug`: Unique  
- Indexes: `slug`, `parent_id`, `target_role`, `is_active`  

**Relationships**:  
- `belongsTo Categories` (parent): Self-referential for sub-categories  
- `hasMany Categories` (children): Sub-categories  
- `belongsTo Users` (creator/updater): Admin user  
- `hasMany Products`: Ek category ke multiple products  
- `hasMany DiscountRules`: Ek category ke multiple discount rules  

#### 2.2 Brands Table
**Description**: Product brands (e.g., Apple, Samsung).  
**Fields**:  
- `brand_id` (UUID, Primary Key): Unique ID  
- `name` (String, not null, unique): Brand ka naam  
- `slug` (String, unique, not null): URL-friendly name  
- `is_active` (Boolean, default: true): Soft delete ke liye  
- `created_by` (UUID, not null, FK → Users): Kon ne banaya  
- `updated_by` (UUID, nullable, FK → Users): Kon ne update kiya  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `name`, `slug`: Unique  
- Indexes: `name`, `slug`, `is_active`  

**Relationships**:  
- `belongsTo Users` (creator/updater): Admin user  
- `hasMany Products`: Ek brand ke multiple products  
- `hasMany DiscountRules`: Ek brand ke multiple discount rules  

#### 2.3 Products Table
**Description**: Products ki details (e.g., iPhone 15).  
**Fields**:  
- `product_id` (UUID, Primary Key): Unique ID  
- `name` (String, not null): Product ka naam  
- `slug` (String, unique, not null): URL-friendly name  
- `description` (Text, nullable): Product description  
- `short_description` (String(500), nullable): Short description  
- `base_price` (Decimal(10,2), not null): Default price  
- `rating_average` (Decimal(3,1), default: 0.0): Average rating  
- `rating_count` (Integer, default: 0): Number of ratings  
- `is_active` (Boolean, default: true): Product active hai ya nahi  
- `is_featured` (Boolean, default: false): Featured product hai ya nahi  
- `category_id` (UUID, not null, FK → Categories): Kon si category  
- `brand_id` (UUID, nullable, FK → Brands): Kon sa brand  
- `store_id` (UUID, nullable, FK → Stores): Kon sa store (multi-vendor)  
- `created_by` (UUID, not null, FK → Users): Kon ne banaya  
- `updated_by` (UUID, nullable, FK → Users): Kon ne update kiya  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `slug`: Unique  
- `base_price`: Positive value  
- Indexes: `slug`, `category_id`, `brand_id`, `store_id`, `is_active`, `is_featured`  

**Relationships**:  
- `belongsTo Categories`: Ek product ek category se belong karta hai  
- `belongsTo Brands`: Ek product ek brand se belong karta hai  
- `belongsTo Stores`: Ek product ek store se belong karta hai  
- `belongsTo Users` (creator/updater): Admin/retailer user  
- `hasMany ProductVariants`: Ek product ke multiple variants  
- `hasMany ProductMedia`: Ek product ke multiple media  
- `hasMany ProductReviews`: Ek product ke multiple reviews  
- `hasMany OrderItems`: Ek product ke multiple order items  
- `hasMany CartItems`: Ek product ke multiple cart items  
- `hasMany WishListItems`: Ek product ke multiple wishlist items  
- `hasMany Coupons`: Ek product ke multiple coupons  
- `hasMany DiscountRules`: Ek product ke multiple discount rules  
- `hasMany StockAlerts`: Ek product ke multiple stock alerts  

#### 2.4 ProductVariants Table
**Description**: Product ke variants (e.g., iPhone 15 128GB Black).  
**Fields**:  
- `product_variant_id` (UUID, Primary Key): Unique ID  
- `product_id` (UUID, not null, FK → Products): Kon sa product  
- `price` (Decimal(10,2), not null): Variant ki price  
- `stock_quantity` (Integer, not null, default: 0): Kitna stock hai  
- `sku` (String, unique, nullable): Stock keeping unit  
- `description` (Text, nullable): Variant description  
- `short_description` (String(500), nullable): Short description  
- `base_variant_image_url` (String, nullable): Main image URL  
- `discount_quantity` (Integer, nullable): Discount ke liye min quantity  
- `discount_percentage` (Decimal(5,2), nullable): Discount percentage  
- `min_retailer_quantity` (Integer, nullable): Retailers ke liye min quantity  
- `bulk_discount_quantity` (Integer, nullable): Bulk order min quantity  
- `bulk_discount_percentage` (Decimal(5,2), nullable): Bulk discount percentage  
- `is_active` (Boolean, default: true): Soft delete ke liye  
- `created_by` (UUID, not null, FK → Users): Kon ne banaya  
- `updated_by` (UUID, nullable, FK → Users): Kon ne update kiya  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `sku`: Unique (if provided)  
- `price`, `stock_quantity`: Positive values  
- Indexes: `product_id`, `sku`, `is_active`  

**Relationships**:  
- `belongsTo Products`: Ek variant ek product se belong karta hai  
- `belongsTo Users` (creator/updater): Admin/retailer user  
- `hasMany VariantAttributeValues`: Ek variant ke multiple attributes  
- `hasMany ProductMedia`: Ek variant ke multiple media  
- `hasMany ProductReviews`: Ek variant ke multiple reviews  
- `hasMany OrderItems`: Ek variant ke multiple order items  
- `hasMany CartItems`: Ek variant ke multiple cart items  
- `hasMany WishListItems`: Ek variant ke multiple wishlist items  
- `hasMany Coupons`: Ek variant ke multiple coupons  
- `hasMany DiscountRules`: Ek variant ke multiple discount rules  
- `hasMany StockAlerts`: Ek variant ke multiple stock alerts  

#### 2.5 ProductMedia Table
**Description**: Product ya variant ke photos/videos store karta hai.  
**Fields**:  
- `product_media_id` (UUID, Primary Key): Unique ID  
- `product_id` (UUID, not null, FK → Products): Kon sa product  
- `product_variant_id` (UUID, nullable, FK → ProductVariants): Kon sa variant  
- `media_type` (Enum: image, video, default: image): Media ka type  
- `is_active` (Boolean, default: true): Soft delete ke liye  
- `created_by` (UUID, not null, FK → Users): Kon ne banaya  
- `updated_by` (UUID, nullable, FK → Users): Kon ne update kiya  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- Indexes: `product_id`, `product_variant_id`, `media_type`, `is_active`  

**Relationships**:  
- `belongsTo Products`: Ek media ek product se belong karta hai  
- `belongsTo ProductVariants`: Ek media ek variant se belong kar sakta hai  
- `belongsTo Users` (creator/updater): Admin/retailer user  
- `hasMany ProductMediaURL`: Ek media ke multiple URLs  

#### 2.6 ProductMediaURL Table
**Description**: Media ke URLs store karta hai (e.g., CDN links).  
**Fields**:  
- `product_media_url_id` (UUID, Primary Key): Unique ID  
- `product_media_id` (UUID, not null, FK → ProductMedia): Kon sa media  
- `product_media_url` (String, not null): Media storage reference (URL)  
- `media_type` (Enum: image, video, default: image): Media ka type  
- `is_active` (Boolean, default: true): Soft delete ke liye  
- `created_by` (UUID, not null, FK → Users): Kon ne banaya  
- `updated_by` (UUID, nullable, FK → Users): Kon ne update kiya  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `product_media_url`: Valid URL format  
- Indexes: `product_media_id`, `media_type`, `is_active`  

**Relationships**:  
- `belongsTo ProductMedia`: Ek URL ek media se belong karta hai  
- `belongsTo Users` (creator/updater): Admin/retailer user  

#### 2.7 Attributes Table
**Description**: Product properties (e.g., Color, Storage).  
**Fields**:  
- `product_attribute_id` (UUID, Primary Key): Unique ID  
- `name` (String, not null, unique): Property ka naam (e.g., "Color")  
- `data_type` (Enum: string, int, float, enum, default: string): Data type  
- `is_variant_level` (Boolean, default: false): Variant-specific hai ya nahi  
- `is_active` (Boolean, default: true): Soft delete ke liye  
- `created_by` (UUID, not null, FK → Users): Kon ne banaya  
- `updated_by` (UUID, nullable, FK → Users): Kon ne update kiya  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `name`: Unique  
- Indexes: `name`, `is_active`  

**Relationships**:  
- `belongsTo Users` (creator/updater): Admin user  
- `hasMany AttributeValues`: Ek attribute ke multiple values  
- `hasMany VariantAttributeValues`: Ek attribute ke multiple variant mappings  

#### 2.8 AttributeValues Table
**Description**: Attribute ki values (e.g., "Black", "128GB").  
**Fields**:  
- `product_attribute_value_id` (UUID, Primary Key): Unique ID  
- `product_attribute_id` (UUID, not null, FK → Attributes): Kon sa attribute  
- `value` (String, not null): Actual value  
- `is_active` (Boolean, default: true): Soft delete ke liye  
- `created_by` (UUID, not null, FK → Users): Kon ne banaya  
- `updated_by` (UUID, nullable, FK → Users): Kon ne update kiya  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- Unique constraint: (`product_attribute_id`, `value`)  
- Indexes: `product_attribute_id`, `is_active`  

**Relationships**:  
- `belongsTo Attributes`: Ek value ek attribute se belong karti hai  
- `belongsTo Users` (creator/updater): Admin user  
- `hasMany VariantAttributeValues`: Ek value multiple variants se link ho sakti hai  

#### 2.9 VariantAttributeValues Table
**Description**: Variant-specific attributes (e.g., iPhone 15 128GB ka color "Black").  
**Fields**:  
- `variant_attribute_value_id` (UUID, Primary Key): Unique ID  
- `product_variant_id` (UUID, not null, FK → ProductVariants): Kon sa variant  
- `product_attribute_id` (UUID, not null, FK → Attributes): Kon sa attribute  
- `product_attribute_value_id` (UUID, not null, FK → AttributeValues): Kon si value  
- `created_by` (UUID, not null, FK → Users): Kon ne banaya  
- `updated_by` (UUID, nullable, FK → Users): Kon ne update kiya  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- Unique constraint: (`product_variant_id`, `product_attribute_id`)  
- Indexes: `product_variant_id`, `product_attribute_id`, `product_attribute_value_id`  

**Relationships**:  
- `belongsTo ProductVariants`: Ek mapping ek variant se belong karta hai  
- `belongsTo Attributes`: Ek mapping ek attribute se belong karta hai  
- `belongsTo AttributeValues`: Ek mapping ek attribute value se belong karta hai  
- `belongsTo Users` (creator/updater): Admin user  

---

### 3. Order Management

#### 3.1 Orders Table
**Description**: Users ke orders ka record.  
**Fields**:  
- `order_id` (UUID, Primary Key): Unique ID  
- `user_id` (UUID, not null, FK → Users): Kon sa user  
- `address_id` (UUID, not null, FK → Addresses): Delivery address  
- `payment_id` (UUID, nullable, FK → Payments): Payment details  
- `order_number` (String, unique, not null): Order number (e.g., "ORD-2025-001")  
- `order_date` (Date, default: NOW): Order creation date  
- `order_status` (Enum: pending, processing, shipped, delivered, cancelled, default: pending): Order status  
- `payment_status` (Enum: pending, paid, failed, refunded, default: pending): Payment status  
- `payment_method` (Enum: credit_card, debit_card, upi, cod, net_banking, not null): Payment method  
- `subtotal` (Decimal(10,2), not null): Subtotal amount  
- `shipping_cost` (Decimal(10,2), default: 0.0): Shipping cost  
- `tax_amount` (Decimal(10,2), default: 0.0): Tax amount  
- `discount_amount` (Decimal(10,2), default: 0.0): Discount amount  
- `total_amount` (Decimal(10,2), not null): Total price  
- `notes` (Text, nullable): Additional notes  
- `tracking_number` (String, nullable): Shipment tracking number  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `order_number`: Unique  
- `total_amount`: Positive value  
- Indexes: `user_id`, `order_number`, `order_status`, `payment_status`  

**Relationships**:  
- `belongsTo Users`: Ek order ek user se belong karta hai  
- `belongsTo Addresses`: Ek order ek address se belong karta hai  
- `belongsTo Payments`: Ek order ek payment se belong karta hai  
- `hasMany OrderItems`: Ek order ke multiple items  
- `hasMany CouponRedemptions`: Ek order ke multiple coupon redemptions  

#### 3.2 OrderItems Table
**Description**: Order mein shamil products.  
**Fields**:  
- `order_item_id` (UUID, Primary Key): Unique ID  
- `order_id` (UUID, not null, FK → Orders): Kon sa order  
- `product_id` (UUID, not null, FK → Products): Kon sa product  
- `product_variant_id` (UUID, nullable, FK → ProductVariants): Kon sa variant  
- `total_quantity` (Integer, not null): Kitne items  
- `price_at_time` (Decimal(10,2), not null): Order ke time ki price  
- `discount_applied` (Decimal(10,2), default: 0.0): Kitna discount mila  
- `final_price` (Decimal(10,2), not null): Final price after discount  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `total_quantity`: Positive value  
- `price_at_time`, `final_price`: Positive values  
- Indexes: `order_id`, `product_id`, `product_variant_id`  

**Relationships**:  
- `belongsTo Orders`: Ek item ek order se belong karta hai  
- `belongsTo Products`: Ek item ek product se belong karta hai  
- `belongsTo ProductVariants`: Ek item ek variant se belong karta hai  

#### 3.3 Payments Table
**Description**: Order payments ka record.  
**Fields**:  
- `payment_id` (UUID, Primary Key): Unique ID  
- `user_id` (UUID, not null, FK → Users): Kon sa user  
- `order_id` (UUID, nullable, FK → Orders): Kon sa order  
- `amount` (Decimal(10,2), not null): Payment amount  
- `currency` (String, default: "INR"): Currency of payment  
- `payment_method` (Enum: credit_card, debit_card, upi, cod, net_banking, not null): Payment method  
- `payment_status` (Enum: pending, paid, failed, refunded, default: pending): Payment status  
- `transaction_id` (String, nullable): Payment gateway transaction ID  
- `payment_date` (Date, nullable): Payment completion date  
- `payment_details` (JSON, nullable): Additional payment details (e.g., gateway response)  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `amount`: Positive value  
- Indexes: `user_id`, `order_id`, `payment_status`  

**Relationships**:  
- `belongsTo Users`: Ek payment ek user se belong karta hai  
- `belongsTo Orders`: Ek payment ek order se belong karta hai  
- `hasOne Order`: Ek payment ek order ko pay karta hai  

---

### 4. Cart & Wishlist

#### 4.1 Carts Table
**Description**: User ka temporary cart.  
**Fields**:  
- `cart_id` (UUID, Primary Key): Unique ID  
- `user_id` (UUID, not null, FK → Users): Kon sa user  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- Unique constraint: Only one active cart per `user_id`  
- Indexes: `user_id`  

**Relationships**:  
- `belongsTo Users`: Ek cart ek user se belong karta hai  
- `hasMany CartItems`: Ek cart ke multiple items  

#### 4.2 CartItems Table
**Description**: Cart mein shamil products.  
**Fields**:  
- `cart_item_id` (UUID, Primary Key): Unique ID  
- `cart_id` (UUID, not null, FK → Carts): Kon sa cart  
- `product_id` (UUID, not null, FK → Products): Kon sa product  
- `product_variant_id` (UUID, nullable, FK → ProductVariants): Kon sa variant  
- `quantity` (Integer, not null, default: 1): Kitne items  
- `price_at_time` (Decimal(10,2), not null): Add to cart ke time ki price  
- `discount_applied` (Decimal(10,2), default: 0.0): Kitna discount mila  
- `final_price` (Decimal(10,2), not null): Final price after discount  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `quantity`: Positive value  
- `price_at_time`, `final_price`: Positive values  
- Unique constraint: (`cart_id`, `product_id`, `product_variant_id`)  
- Indexes: `cart_id`, `product_id`, `product_variant_id`  

**Relationships**:  
- `belongsTo Carts`: Ek item ek cart se belong karta hai  
- `belongsTo Products`: Ek item ek product se belong karta hai  
- `belongsTo ProductVariants`: Ek item ek variant se belong karta hai  

#### 4.3 Wishlists Table
**Description**: User ke "save for later" items.  
**Fields**:  
- `wishlist_id` (UUID, Primary Key): Unique ID  
- `user_id` (UUID, not null, FK → Users): Kon sa user  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- Indexes: `user_id`  

**Relationships**:  
- `belongsTo Users`: Ek wishlist ek user se belong karta hai  
- `hasMany WishListItems`: Ek wishlist ke multiple items  

#### 4.4 WishListItems Table
**Description**: Wishlist mein shamil products.  
**Fields**:  
- `wish_list_item_id` (UUID, Primary Key): Unique ID  
- `wishlist_id` (UUID, not null, FK → Wishlists): Kon sa wishlist  
- `product_id` (UUID, not null, FK → Products): Kon sa product  
- `product_variant_id` (UUID, nullable, FK → ProductVariants): Kon sa variant  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- Unique constraint: (`wishlist_id`, `product_id`, `product_variant_id`)  
- Indexes: `wishlist_id`, `product_id`, `product_variant_id`  

**Relationships**:  
- `belongsTo Wishlists`: Ek item ek wishlist se belong karta hai  
- `belongsTo Products`: Ek item ek product se belong karta hai  
- `belongsTo ProductVariants`: Ek item ek variant se belong karta hai  

---

### 5. Discounts & Promotions

#### 5.1 Coupons Table
**Description**: Discount coupons manage karta hai.  
**Fields**:  
- `coupon_id` (UUID, Primary Key): Unique ID  
- `code` (String, unique, not null): Coupon code (e.g., "WELCOME10")  
- `description` (String, nullable): Coupon description  
- `type` (Enum: percentage, fixed, not null): Discount type  
- `discount_value` (Decimal(10,2), not null): Discount amount/percentage  
- `target_type` (Enum: product, cart, default: cart): Discount ka target  
- `product_id` (UUID, nullable, FK → Products): Specific product ke liye  
- `product_variant_id` (UUID, nullable, FK → ProductVariants): Specific variant ke liye  
- `target_role` (Enum: customer, retailer, both, default: both): Kon use karega  
- `min_cart_value` (Decimal(10,2), nullable): Minimum cart value  
- `max_discount_value` (Decimal(10,2), nullable): Maximum discount  
- `usage_limit` (Integer, nullable): Kitni baar use ho sakta hai  
- `usage_per_user` (Integer, nullable): Ek user kitni baar use kare  
- `valid_from` (Date, not null): Kab se valid  
- `valid_to` (Date, not null): Kab tak valid  
- `is_active` (Boolean, default: true): Coupon active hai ya nahi  
- `is_user_new` (Boolean, default: false): New users ke liye  
- `created_by` (UUID, not null, FK → Users): Kon ne banaya  
- `updated_by` (UUID, nullable, FK → Users): Kon ne update kiya  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `code`: Unique  
- `discount_value`, `min_cart_value`, `max_discount_value`: Positive values  
- `valid_from` < `valid_to`  
- Indexes: `code`, `target_type`, `target_role`, `is_active`  

**Relationships**:  
- `belongsTo Products`: Ek coupon ek product se belong kar sakta hai  
- `belongsTo ProductVariants`: Ek coupon ek variant se belong kar sakta hai  
- `belongsTo Users` (creator/updater): Admin user  
- `hasMany CouponRedemptions`: Ek coupon ke multiple redemptions  
- `hasMany CouponUsers`: Ek coupon multiple users ko assigned ho sakta hai  

#### 5.2 CouponUsers Table
**Description**: Coupons aur users ke beech many-to-many relationship.  
**Fields**:  
- `coupon_user_id` (UUID, Primary Key): Unique ID  
- `coupon_id` (UUID, not null, FK → Coupons): Kon sa coupon  
- `user_id` (UUID, not null, FK → Users): Kon sa user  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- Unique constraint: (`coupon_id`, `user_id`)  
- Indexes: `coupon_id`, `user_id`  

**Relationships**:  
- `belongsTo Coupons`: Ek entry ek coupon se belong karti hai  
- `belongsTo Users`: Ek entry ek user se belong karti hai  

#### 5.3 CouponRedemptions Table
**Description**: Coupon use karne ka record.  
**Fields**:  
- `coupon_redemption_id` (UUID, Primary Key): Unique ID  
- `user_id` (UUID, not null, FK → Users): Kon sa user  
- `coupon_id` (UUID, not null, FK → Coupons): Kon sa coupon  
- `order_id` (UUID, not null, FK → Orders): Kis order pe use hua  
- `discount_amount` (Decimal(10,2), not null): Kitna discount mila  
- `redeemed_at` (Date, default: NOW): Kab redeem kiya  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `discount_amount`: Positive value  
- Indexes: `user_id`, `coupon_id`, `order_id`  

**Relationships**:  
- `belongsTo Users`: Ek redemption ek user se belong karta hai  
- `belongsTo Coupons`: Ek redemption ek coupon se belong karta hai  
- `belongsTo Orders`: Ek redemption ek order se belong karta hai  

#### 5.4 DiscountRules Table
**Description**: Special offers aur discounts ke rules.  
**Fields**:  
- `discount_rule_id` (UUID, Primary Key): Unique ID  
- `name` (String, not null): Rule ka naam (e.g., "Summer Sale")  
- `description` (String, nullable): Rule description  
- `type` (Enum: percentage, fixed, not null): Discount type  
- `discount_value` (Decimal(10,2), not null): Discount amount/percentage  
- `product_id` (UUID, nullable, FK → Products): Kon sa product  
- `category_id` (UUID, nullable, FK → Categories): Kon si category  
- `brand_id` (UUID, nullable, FK → Brands): Kon sa brand  
- `product_variant_id` (UUID, nullable, FK → ProductVariants): Kon sa variant  
- `min_cart_value` (Decimal(10,2), nullable): Minimum cart value  
- `min_quantity` (Integer, nullable): Minimum quantity for discount  
- `target_role` (Enum: customer, retailer, both, default: both): Kon use karega  
- `valid_from` (Date, not null): Kab se valid  
- `valid_to` (Date, not null): Kab tak valid  
- `is_active` (Boolean, default: true): Rule active hai ya nahi  
- `created_by` (UUID, not null, FK → Users): Kon ne banaya  
- `updated_by` (UUID, nullable, FK → Users): Kon ne update kiya  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `discount_value`, `min_cart_value`: Positive values  
- `valid_from` < `valid_to`  
- Indexes: `product_id`, `category_id`, `brand_id`, `product_variant_id`, `is_active`  

**Relationships**:  
- `belongsTo Products`: Ek rule ek product se belong kar sakta hai  
- `belongsTo Categories`: Ek rule ek category se belong kar sakta hai  
- `belongsTo Brands`: Ek rule ek brand se belong kar sakta hai  
- `belongsTo ProductVariants`: Ek rule ek variant se belong kar sakta hai  
- `belongsTo Users` (creator/updater): Admin user  

---

### 6. Reviews & Alerts

#### 6.1 ProductReviews Table
**Description**: Product reviews aur ratings ka record.  
**Fields**:  
- `product_review_id` (UUID, Primary Key): Unique ID  
- `product_id` (UUID, not null, FK → Products): Kon sa product  
- `product_variant_id` (UUID, nullable, FK → ProductVariants): Kon sa variant  
- `user_id` (UUID, not null, FK → Users): Kon sa user  
- `rating` (Integer, not null, validate: 1-5): 1-5 stars  
- `title` (String, nullable): Review title  
- `review` (Text, nullable): Review details  
- `is_verified_purchase` (Boolean, default: false): User ne khareeda tha ya nahi  
- `is_approved` (Boolean, default: false): Review approved hai ya nahi  
- `created_by` (UUID, not null, FK → Users): Kon ne banaya  
- `updated_by` (UUID, nullable, FK → Users): Kon ne update kiya  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `rating`: Between 1 and 5  
- Indexes: `product_id`, `product_variant_id`, `user_id`, `is_approved`  

**Relationships**:  
- `belongsTo Products`: Ek review ek product se belong karta hai  
- `belongsTo ProductVariants`: Ek review ek variant se belong kar sakta hai  
- `belongsTo Users` (reviewer/creator/updater): User/admin  

#### 6.2 StockAlerts Table
**Description**: Low stock notifications ka record.  
**Fields**:  
- `alert_id` (UUID, Primary Key): Unique ID  
- `product_id` (UUID, not null, FK → Products): Kon sa product  
- `product_variant_id` (UUID, not null, FK → ProductVariants): Kon sa variant  
- `stock_level` (Integer, not null): Kitna stock bacha  
- `status` (Enum: pending, sent, default: pending): Alert status  
- `created_by` (UUID, not null, FK → Users): Kon ne banaya  
- `updated_by` (UUID, nullable, FK → Users): Kon ne update kiya  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- `stock_level`: Non-negative value  
- Indexes: `product_id`, `product_variant_id`, `status`  

**Relationships**:  
- `belongsTo Products`: Ek alert ek product se belong karta hai  
- `belongsTo ProductVariants`: Ek alert ek variant se belong karta hai  
- `belongsTo Users` (creator/updater): Admin user  

---

### 7. Store Management

#### 7.1 Stores Table
**Description**: Retailers ya owners ke stores ka data.  
**Fields**:  
- `store_id` (UUID, Primary Key): Unique ID  
- `name` (String, not null): Store ka naam  
- `location` (String, nullable): Store ka address  
- `owner_id` (UUID, not null, FK → Owners): Kon sa owner  
- `is_active` (Boolean, default: true): Soft delete ke liye  
- `created_at`, `updated_at` (Timestamp): Auto-managed  

**Constraints**:  
- Indexes: `owner_id`, `is_active`  

**Relationships**:  
- `belongsTo Owners`: Ek store ek owner se belong karta hai  
- `hasMany Products`: Ek store ke multiple products  

---

### Full Database Relationships (ER Diagram)

```
erDiagram
  Users ||--o{ Addresses : "has"
  Users ||--o{ Orders : "places"
  Users ||--o| Carts : "has"
  Users ||--o{ Wishlists : "has"
  Users ||--o{ ProductReviews : "writes"
  Users ||--o{ CouponRedemptions : "redeems"
  Users ||--o{ CouponUsers : "receives"
  Users ||--o{ Payments : "makes"
  Users ||--o{ Products : "creates/updates"
  Users ||--o{ Categories : "creates/updates"
  Users ||--o{ Brands : "creates/updates"
  Users ||--o{ ProductVariants : "creates/updates"
  Users ||--o{ ProductMedia : "creates/updates"
  Users ||--o{ ProductMediaURL : "creates/updates"
  Users ||--o{ Attributes : "creates/updates"
  Users ||--o{ AttributeValues : "creates/updates"
  Users ||--o{ VariantAttributeValues : "creates/updates"
  Users ||--o{ Coupons : "creates/updates"
  Users ||--o{ DiscountRules : "creates/updates"
  Users ||--o{ StockAlerts : "creates/updates"
  Owners ||--o{ Stores : "owns"
  Stores ||--o{ Products : "sells"
  Products ||--o{ ProductVariants : "has"
  Products ||--o{ ProductMedia : "has"
  Products ||--o{ ProductReviews : "receives"
  Products ||--o{ OrderItems : "contains"
  Products ||--o{ CartItems : "contains"
  Products ||--o{ WishListItems : "contains"
  Products ||--o{ Coupons : "applies"
  Products ||--o{ DiscountRules : "applies"
  Products ||--o{ StockAlerts : "triggers"
  ProductVariants ||--o{ VariantAttributeValues : "has"
  ProductVariants ||--o{ ProductMedia : "has"
  ProductVariants ||--o{ ProductReviews : "receives"
  ProductVariants ||--o{ OrderItems : "contains"
  ProductVariants ||--o{ CartItems : "contains"
  ProductVariants ||--o{ WishListItems : "contains"
  ProductVariants ||--o{ Coupons : "applies"
  ProductVariants ||--o{ DiscountRules : "applies"
  ProductVariants ||--o{ StockAlerts : "triggers"
  ProductMedia ||--o{ ProductMediaURL : "has"
  Attributes ||--o{ AttributeValues : "has"
  Attributes ||--o{ VariantAttributeValues : "maps"
  AttributeValues ||--o{ VariantAttributeValues : "maps"
  Orders ||--o{ OrderItems : "contains"
  Orders ||--o{ CouponRedemptions : "uses"
  Payments ||--o| Orders : "pays"
  Coupons ||--o{ CouponRedemptions : "redeemed"
  Coupons ||--o{ CouponUsers : "assigned"
  Carts ||--o{ CartItems : "contains"
  Wishlists ||--o{ WishListItems : "contains"
  Categories ||--o{ Products : "categorizes"
  Categories ||--o{ DiscountRules : "applies"
  Brands ||--o{ Products : "brands"
  Brands ||--o{ DiscountRules : "applies"
```

---

### Key Fixes & Improvements
- **CartItems Table Added**: Pehle `Carts` table mein `product_id` aur `quantity` galat tha. Ab `CartItems` table ke through items manage hote hain, jo standard practice hai.  
- **Missing Fields**: `Coupons` mein `max_discount_value`, `Payments` mein `order_id`, aur `DiscountRules` mein `name`, `type` add kiye.  
- **Relationships Corrected**: `Carts` ka `hasMany CartItems` aur `Payments` ka `belongsTo Orders` fix kiya.  
- **Constraints Added**: Unique constraints (e.g., `CartItems`, `CouponUsers`), indexes, aur validations clear kiye.  
- **Soft Delete**: `is_active` aur `paranoid` consistently use kiya gaya hai.  
- **Enums**: Sab enums clear aur consistent hain (e.g., `payment_method`, `order_status`).  
- **Removed Redundancy**: `Returns` table nahi thi model mein, isliye hata diya.  

---

### Examples for Clarity

#### Product & Variant Example
**Product**: iPhone 15  
**Fields**:  
- `product_id`: UUID  
- `name`: "iPhone 15"  
- `slug`: "iphone-15"  
- `base_price`: ₹79,999  
- `category_id`: UUID for "Mobiles"  
- `brand_id`: UUID for "Apple"  
- `store_id`: UUID for "Tech Store"  

**Variants**:  
1. 128GB, Black  
   - `product_variant_id`: UUID  
   - `price`: ₹79,999  
   - `sku`: "IPH15-128-BLK"  
   - `stock_quantity`: 50  
2. 256GB, Blue  
   - `product_variant_id`: UUID  
   - `price`: ₹89,999  
   - `sku`: "IPH15-256-BLU"  
   - `stock_quantity`: 30  

**Attributes**:  
- Color: "Black" (via `VariantAttributeValues`)  
- Storage: "128GB" (via `VariantAttributeValues`)  

#### Cart & CartItems Example
**Cart**:  
- `cart_id`: UUID  
- `user_id`: UUID for user  

**CartItems**:  
- iPhone 15 (128GB Black) × 2  
  - `cart_item_id`: UUID  
  - `cart_id`: UUID  
  - `product_id`: UUID for iPhone 15  
  - `product_variant_id`: UUID for 128GB Black  
  - `quantity`: 2  
  - `price_at_time`: ₹79,999  
  - `final_price`: ₹1,59,998  

#### Order & OrderItems Example
**Order**:  
- `order_id`: UUID  
- `user_id`: UUID for user  
- `order_number`: "ORD-2025-001"  
- `total_amount`: ₹1,59,998  
- `order_status`: "pending"  
- `payment_method`: "upi"  

**OrderItems**:  
- iPhone 15 (128GB Black) × 2  
  - `order_item_id`: UUID  
  - `order_id`: UUID  
  - `product_id`: UUID for iPhone 15  
  - `product_variant_id`: UUID for 128GB Black  
  - `total_quantity`: 2  
  - `price_at_time`: ₹79,999  
  - `final_price`: ₹1,59,998  

#### Coupon Example
**Coupon**:  
- `coupon_id`: UUID  
- `code`: "WELCOME20"  
- `type`: "percentage"  
- `discount_value`: 20  
- `target_type`: "cart"  
- `min_cart_value`: ₹1,000  
- `valid_from`: "2025-01-01"  
- `valid_to`: "2025-12-31"  
- `target_role`: "customer"  

#### StockAlert Example
**StockAlert**:  
- `alert_id`: UUID  
- `product_id`: UUID for iPhone 15  
- `product_variant_id`: UUID for 128GB Black  
- `stock_level`: 5  
- `status`: "pending"  

---

###